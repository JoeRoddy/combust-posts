{
  "dependencies": {
    "notifications": "latest",
    "users": "latest"
  },
  "installation": {
    "components/Routes.jsx": {
      "imports": ["import PostView from \"./posts/PostView\";"],
      "renderEnd": ["<Route path=\"/posts/:postId\" component={PostView} />"]
    },
    "components/users/Profile.jsx": {
      "imports": [
        "import UserPosts from \"../posts/UserPosts\";",
        "import CreatePost from \"../posts/CreatePost\";"
      ],
      "replace": {
        "pattern": "<ExamplePosts user={user} />\n",
        "code": ["{isMyProfile && <CreatePost />}", "<UserPosts user={user} />"]
      }
    }
  },
  "rules": {
    "postIdsByUser": {
      "$uid": {
        ".write": "$uid === auth.uid",
        ".read": true
      }
    },
    "postObjects": {
      "$postId": {
        ".read": true,
        ".write":
          "!data.exists() || data.child('createdBy').val() === auth.uid",
        ".validate": "newData.hasChildren(['createdBy'])",
        "createdBy": {
          ".validate": "newData.val()===auth.uid"
        },
        "reactions": {
          "$reactionType": {
            "$uid": {
              ".write": "$uid === auth.uid"
            }
          }
        },
        "comments": {
          "$newCommentId": {
            ".write": "!data.exists()"
          }
        }
      }
    }
  }
}
